pipeline {
    agent any
    
    parameters {
        string(name: 'EXCLUDE_CHART_NAMES', defaultValue: '', description: 'Comma-separated list of chart names to exclude')
        string(name: 'CREATED_BEFORE_DATE', defaultValue: '', description: 'Created before date (YYYY-MM-DD)')
    }
    
    stages {
        stage('Uninstall Helm Releases') {
            steps {
                script {
                    def excludeChartNames = params.EXCLUDE_CHART_NAMES.split(',')
                    def releases = sh(script: "helm list --output json", returnStdout: true).trim()
                    def jsonSlurper = new groovy.json.JsonSlurper()
                    def releaseList = jsonSlurper.parseText(releases)

                    for (release in releaseList) {
                        def releaseName = release.name
                        def releaseChart = release.chart

                        if (excludeChartNames.contains(releaseChart)) {
                            continue
                        }

                        def releaseCreated = sh(script: "helm status $releaseName --output json | jq -r .info.first_deployed", returnStdout: true).trim()
                        
                        // Compare the releaseCreated date with CREATED_BEFORE_DATE
                        def createdDate = releaseCreated.toDate()
                        def cutoffDate = params.CREATED_BEFORE_DATE.toDate()
                        
                        if (createdDate < cutoffDate) {
                            echo "Uninstalling release: $releaseName created on $releaseCreated"
                            sh "helm uninstall $releaseName"
                        }
                    }
                }
            }
        }
    }
}
